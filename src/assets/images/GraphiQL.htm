<!DOCTYPE html>
<!-- saved from url=(0125)http://localhost:8080/graphql?query=query%7B%0A%20%20singleBlog(_id%3A%202)%7B%0A%20%20%20%20description%0A%20%20%7D%0A%7D%0A -->
<html class="gr__localhost"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>GraphiQL</title>
  <meta name="robots" content="noindex">
  <meta name="referrer" content="origin">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body {
      margin: 0;
      overflow: hidden;
    }
    #graphiql {
      height: 100vh;
    }
  </style>
  <link href="./GraphiQL_files/graphiql.css" rel="stylesheet">
  <script src="./GraphiQL_files/es6-promise.auto.min.js"></script>
  <script src="./GraphiQL_files/fetch.min.js"></script>
  <script src="./GraphiQL_files/react.min.js"></script>
  <script src="./GraphiQL_files/react-dom.min.js"></script>
  <script src="./GraphiQL_files/graphiql.min.js"></script>
</head>
<body data-gr-c-s-loaded="true">
  <div id="graphiql"><div data-reactroot="" class="graphiql-container"><div class="historyPaneWrap" style="display: block; width: 230px; z-index: 7;"><div><div class="history-title-bar"><div class="history-title">History</div><div class="doc-explorer-rhs"><div class="docExplorerHide">✕</div></div></div><div class="history-contents"><p class="false"><span class="history-label">query{  login(email: "roce@auth.com", password: "loice"){    userId    token    tokenExpires  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="margin-left: 10px;">★</span></p><p class="false"><span class="history-label">query{  singleBlog(_id: 20){    description  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  singleBlog(_id: 2){    description  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  singleBlog(_id: 20){    description  }}</span><span style="margin-left: 10px; display: none;">✎</span><span style="margin-left: 10px; display: none;">☆</span></p><p class="false"><span class="history-label">query{  singleBlog(_id: 2){    description  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  singleBlog(id: 2){    description  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  singleBlog(id: "2"){    description  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  blogs{    title  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  blogs{    title    description  }  }</span><span style="margin-left: 10px; display: none;">✎</span><span style="margin-left: 10px; display: none;">☆</span></p><p class="false"><span class="history-label">mutation{  createBlog(blogInput: {title: "blogone", description: "Testing blog mutation"}){    _id    title  }  	}</span><span style="margin-left: 10px; display: none;">✎</span><span style="margin-left: 10px; display: none;">☆</span></p><p class="false"><span class="history-label">query{  blogs{    description  }  }</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  blogs{    title    description  }  }</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  images{    name  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">mutation{  uploadFile(file: {name: "dunk", type: "jpg", size: 480, path: "https://www.pexels.com/photo/man-wearing-blue-and-yellow-shorts-playing-basketball-1080884/"}){    path    name  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">subscription{  newBlog}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  images{    name  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">query{  images{    path  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">fetchImg</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">imgUpload</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">mutation{  uploadFile(file: {name: "dunk", type: "jpg", size: 480, path: "https://www.pexels.com/photo/man-wearing-blue-and-yellow-shorts-playing-basketball-1080884/"}){    path  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p><p class="false"><span class="history-label">mutation{  uploadFile(file: {name: "dunk", type: "jpg", size: 480, path: "https://www.pexels.com/photo/man-wearing-blue-and-yellow-shorts-playing-basketball-1080884/"}){    name    path  }}</span><span style="display: none; margin-left: 10px;">✎</span><span style="display: none; margin-left: 10px;">☆</span></p></div></div></div><div class="editorWrap"><div class="topBarWrap"><div class="topBar"><div class="title"><span><!-- react-text: 98 -->Graph<!-- /react-text --><em>i</em><!-- react-text: 100 -->QL<!-- /react-text --></span></div><div class="execute-button-wrap"><button type="button" class="execute-button" title="Execute Query (Ctrl-Enter)"><svg width="34" height="34"><path d="M 11 9 L 24 16 L 11 23 z"></path></svg></button></div><div class="toolbar"><a class="toolbar-button" title="Prettify Query (Shift-Ctrl-P)">Prettify</a><a class="toolbar-button" title="Show History">History</a></div></div><button class="docExplorerShow">Docs</button></div><div class="editorBar"><div class="queryWrap" style="flex: 1 1 0%;"><div class="query-editor"><div class="CodeMirror cm-s-graphiql CodeMirror-focused"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 37px; left: 191.172px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 39px; margin-bottom: 0px; border-right-width: 30px; min-height: 142px; min-width: 170.766px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 152.172px; top: 17px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div><div class="CodeMirror-gutter-elt" style="left: 29px; width: 9px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">query</span><span class="cm-punctuation">{</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws">  </span><span class="cm-property">singleBlog</span><span class="cm-punctuation CodeMirror-matchingbracket">(</span><span class="cm-attribute">_id</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-number">2</span><span class="cm-punctuation CodeMirror-matchingbracket">)</span><span class="cm-punctuation">{</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws">    </span><span class="cm-property">description</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws">  </span><span class="cm-punctuation">}</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-punctuation">}</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 142px;"></div><div class="CodeMirror-gutters" style="height: 172px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div><div class="CodeMirror-gutter CodeMirror-foldgutter"></div></div></div></div></div><div class="variable-editor"><div class="variable-editor-title" style="cursor: n-resize;">Query Variables</div><div class="codemirrorWrap"><div class="CodeMirror cm-s-graphiql"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 43px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="display: block; bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 57px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 39px; margin-bottom: 0px; border-right-width: 30px; min-height: 57px; min-width: 7px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -39px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 57px;"></div><div class="CodeMirror-gutters" style="height: 87px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div><div class="CodeMirror-gutter CodeMirror-foldgutter"></div></div></div></div></div></div></div><div class="resultWrap"><div class="result-window"><div class="CodeMirror cm-s-graphiql CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 20px; left: 17px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 13px; margin-bottom: 0px; border-right-width: 30px; min-height: 380px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style=""><div class="CodeMirror-cursor" style="left: 4px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -13px;"><div class="CodeMirror-gutter-elt" style="left: 0px; width: 12px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-punctuation">{</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -13px;"><div class="CodeMirror-gutter-elt" style="left: 0px; width: 12px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp;</span><span class="cm-def">"errors"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-punctuation">[</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -13px;"><div class="CodeMirror-gutter-elt" style="left: 0px; width: 12px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp;</span><span class="cm-punctuation">{</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp;</span><span class="cm-property">"message"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-string">"Cast to ObjectId failed for value \"20\" at path \"_id\" for model \"Blog\""</span><span class="cm-punctuation">,</span></span></pre><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -13px;"><div class="CodeMirror-gutter-elt" style="left: 0px; width: 12px;"><div class="CodeMirror-foldgutter-open CodeMirror-guttermarker-subtle"></div></div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp;</span><span class="cm-property">"locations"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-punctuation">[</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="cm-punctuation">{</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="cm-property">"line"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-number">2</span><span class="cm-punctuation">,</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="cm-property">"column"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-number">3</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="cm-punctuation">}</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp;</span><span class="cm-punctuation">],</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp;</span><span class="cm-property">"path"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-punctuation">[</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="cm-string">"singleBlog"</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp;</span><span class="cm-punctuation">]</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp;</span><span class="cm-punctuation">}</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp;</span><span class="cm-punctuation">],</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp;</span><span class="cm-def">"data"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-punctuation">{</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp;</span><span class="cm-property">"singleBlog"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-keyword">null</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp;</span><span class="cm-punctuation">}</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-punctuation">}</span></span></pre><pre class=" CodeMirror-line " role="presentation" style="display: none;"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-ws"> &nbsp; &nbsp; &nbsp;</span><span class="cm-property">"message"</span><span class="cm-punctuation">:</span><span class="cm-ws"> </span><span class="cm-string">"Cast to ObjectId failed for value \"{ fieldName: 'singleBlog',\n  fieldNodes:\n &nbsp; [ { kind: 'Field',\n &nbsp; &nbsp; &nbsp; alias: undefined,\n &nbsp; &nbsp; &nbsp; name: [Object],\n &nbsp; &nbsp; &nbsp; arguments: [Array],\n &nbsp; &nbsp; &nbsp; directives: [],\n &nbsp; &nbsp; &nbsp; selectionSet: [Object],\n &nbsp; &nbsp; &nbsp; loc: [Object] } ],\n  returnType: Blog,\n  parentType: rootQuery,\n  path: { prev: undefined, key: 'singleBlog' },\n  schema:\n &nbsp; GraphQLSchema {\n &nbsp; &nbsp; __validationErrors: [],\n &nbsp; &nbsp; __allowedLegacyNames: [],\n &nbsp; &nbsp; _queryType: rootQuery,\n &nbsp; &nbsp; _mutationType: rootMutation,\n &nbsp; &nbsp; _subscriptionType: null,\n &nbsp; &nbsp; _directives: [ @skip, @include, @deprecated ],\n &nbsp; &nbsp; astNode:\n &nbsp; &nbsp;  { kind: 'SchemaDefinition',\n &nbsp; &nbsp; &nbsp;  directives: [],\n &nbsp; &nbsp; &nbsp;  operationTypes: [Array],\n &nbsp; &nbsp; &nbsp;  loc: [Object] },\n &nbsp; &nbsp; extensionASTNodes: undefined,\n &nbsp; &nbsp; _typeMap:\n &nbsp; &nbsp;  [Object: null prototype] {\n &nbsp; &nbsp; &nbsp;  rootQuery: rootQuery,\n &nbsp; &nbsp; &nbsp;  Blog: Blog,\n &nbsp; &nbsp; &nbsp;  ID: ID,\n &nbsp; &nbsp; &nbsp;  String: String,\n &nbsp; &nbsp; &nbsp;  authData: authData,\n &nbsp; &nbsp; &nbsp;  Int: Int,\n &nbsp; &nbsp; &nbsp;  Img: Img,\n &nbsp; &nbsp; &nbsp;  rootMutation: rootMutation,\n &nbsp; &nbsp; &nbsp;  userInput: userInput,\n &nbsp; &nbsp; &nbsp;  User: User,\n &nbsp; &nbsp; &nbsp;  blogInput: blogInput,\n &nbsp; &nbsp; &nbsp;  updateBlogInput: updateBlogInput,\n &nbsp; &nbsp; &nbsp;  deleteBlogInput: deleteBlogInput,\n &nbsp; &nbsp; &nbsp;  Upload: Upload,\n &nbsp; &nbsp; &nbsp;  __Schema: __Schema,\n &nbsp; &nbsp; &nbsp;  __Type: __Type,\n &nbsp; &nbsp; &nbsp;  __TypeKind: __TypeKind,\n &nbsp; &nbsp; &nbsp;  Boolean: Boolean,\n &nbsp; &nbsp; &nbsp;  __Field: __Field,\n &nbsp; &nbsp; &nbsp;  __InputValue: __InputValue,\n &nbsp; &nbsp; &nbsp;  __EnumValue: __EnumValue,\n &nbsp; &nbsp; &nbsp;  __Directive: __Directive,\n &nbsp; &nbsp; &nbsp;  __DirectiveLocation: __DirectiveLocation },\n &nbsp; &nbsp; _possibleTypeMap: [Object: null prototype] {},\n &nbsp; &nbsp; _implementations: [Object: null prototype] {} },\n  fragments: {},\n  rootValue:\n &nbsp; { createUser: [AsyncFunction: createUser],\n &nbsp; &nbsp; login: [AsyncFunction: login],\n &nbsp; &nbsp; blogs: [AsyncFunction: blogs],\n &nbsp; &nbsp; singleBlog: [AsyncFunction: singleBlog],\n &nbsp; &nbsp; createBlog: [AsyncFunction: createBlog],\n &nbsp; &nbsp; editBlog: [AsyncFunction: editBlog],\n &nbsp; &nbsp; deleteBlog: [AsyncFunction: deleteBlog],\n &nbsp; &nbsp; images: [AsyncFunction: images],\n &nbsp; &nbsp; uploadFile: [AsyncFunction: uploadFile] },\n  operation:\n &nbsp; { kind: 'OperationDefinition',\n &nbsp; &nbsp; operation: 'query',\n &nbsp; &nbsp; name: undefined,\n &nbsp; &nbsp; variableDefinitions: [],\n &nbsp; &nbsp; directives: [],\n &nbsp; &nbsp; selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },\n &nbsp; &nbsp; loc: { start: 0, end: 51 } },\n  variableValues: {} }\" at path \"_id\" for model \"Blog\""</span><span class="cm-punctuation">,</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 380px;"></div><div class="CodeMirror-gutters" style="height: 410px; left: 0px;"><div class="CodeMirror-gutter CodeMirror-foldgutter"></div></div></div></div></div></div></div></div><div class="docExplorerWrap" style="display: none; width: 350px;"><div class="docExplorerResizer"></div><div class="doc-explorer"><div class="doc-explorer-title-bar"><div class="doc-explorer-title">Documentation Explorer</div><div class="doc-explorer-rhs"><div class="docExplorerHide">✕</div></div></div><div class="doc-explorer-contents"><label class="search-box"><input type="text" value="" placeholder="Search Schema..."><!-- react-text: 127 --><!-- /react-text --></label><div><div class="doc-type-description"><p>A GraphQL schema provides a root type for each kind of operation.</p>
</div><div class="doc-category"><div class="doc-category-title">root types</div><div class="doc-category-item"><span class="keyword">query</span><!-- react-text: 136 -->: <!-- /react-text --><a class="type-name">rootQuery</a></div><div class="doc-category-item"><span class="keyword">mutation</span><!-- react-text: 140 -->: <!-- /react-text --><a class="type-name">rootMutation</a></div></div></div></div></div></div></div></div>
  <script>
    // Collect the URL parameters
    var parameters = {};
    window.location.search.substr(1).split('&').forEach(function (entry) {
      var eq = entry.indexOf('=');
      if (eq >= 0) {
        parameters[decodeURIComponent(entry.slice(0, eq))] =
          decodeURIComponent(entry.slice(eq + 1));
      }
    });

    // Produce a Location query string from a parameter object.
    function locationQuery(params) {
      return '?' + Object.keys(params).filter(function (key) {
        return Boolean(params[key]);
      }).map(function (key) {
        return encodeURIComponent(key) + '=' +
          encodeURIComponent(params[key]);
      }).join('&');
    }

    // Derive a fetch URL from the current URL, sans the GraphQL parameters.
    var graphqlParamNames = {
      query: true,
      variables: true,
      operationName: true
    };

    var otherParams = {};
    for (var k in parameters) {
      if (parameters.hasOwnProperty(k) && graphqlParamNames[k] !== true) {
        otherParams[k] = parameters[k];
      }
    }
    var fetchURL = locationQuery(otherParams);

    // Defines a GraphQL fetcher using the fetch API.
    function graphQLFetcher(graphQLParams) {
      return fetch(fetchURL, {
        method: 'post',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(graphQLParams),
        credentials: 'include',
      }).then(function (response) {
        return response.json();
      });
    }

    // When the query and variables string is edited, update the URL bar so
    // that it can be easily shared.
    function onEditQuery(newQuery) {
      parameters.query = newQuery;
      updateURL();
    }

    function onEditVariables(newVariables) {
      parameters.variables = newVariables;
      updateURL();
    }

    function onEditOperationName(newOperationName) {
      parameters.operationName = newOperationName;
      updateURL();
    }

    function updateURL() {
      history.replaceState(null, null, locationQuery(parameters));
    }

    // Render <GraphiQL /> into the body.
    ReactDOM.render(
      React.createElement(GraphiQL, {
        fetcher: graphQLFetcher,
        onEditQuery: onEditQuery,
        onEditVariables: onEditVariables,
        onEditOperationName: onEditOperationName,
        query: "query{\n  singleBlog(_id: 2){\n    description\n  }\n}\n",
        response: "{\n  \"errors\": [\n    {\n      \"message\": \"Cast to ObjectId failed for value \\\"{ _id: '2' }\\\" at path \\\"_id\\\" for model \\\"Blog\\\"\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"singleBlog\"\n      ]\n    }\n  ],\n  \"data\": {\n    \"singleBlog\": null\n  }\n}",
        variables: undefined,
        operationName: undefined,
      }),
      document.getElementById('graphiql')
    );
  </script>

</body></html>